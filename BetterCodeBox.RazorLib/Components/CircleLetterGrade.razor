@using System.Runtime.InteropServices.JavaScript
@using Microsoft.JSInterop
<div style="width: @(Scale/50.0 * 120)px; height:  @(Scale/50.0 * 120)px; display: flex; justify-content: center; margin: auto">
    
<svg class="circles" viewbox="0 0 110 110" width="120" height="120" style="transform: scale(@(Scale/50.0));display: block; margin: auto">
    <circle r="50" cx="60" cy="60" fill="@BackgroundColor"/>
      
    <path fill="none" stroke-linecap="round" stroke-width="7" stroke="@(Score> 0 ? ForegroundColor : "rgba(0,0,0,0)")"
          stroke-dasharray="@(ScaledScore * 250),250"
          d="M10 60
                 a 50 50 0 1 1 0 1"
          transform="rotate(90 60 60)"></path>
        
      
    <text class="circ-text"
          text-anchor="middle"
          x="60" y="75"
          font-size="50px"
          fill="@ForegroundColor"
    >@Grade</text>
</svg>
</div>

@code {
    [Parameter]
    public int Score { get; set; }

    [Parameter] public int Scale { get; set; } = 50;
    
    
    private double ScaledScore => (double)Math.Max(0, Score-(int)LetterGrade.Grades.D) / (LetterGrade.Grades.A - LetterGrade.Grades.D);
    
    private ElementReference progressE;
    
    
    private string Grade
    {
        get
        {
            return Score switch
            {
                >= (int)LetterGrade.Grades.A => "A", // success
                >= (int)LetterGrade.Grades.B => "B", // primary
                >= (int)LetterGrade.Grades.C => "C", // info
                >= (int)LetterGrade.Grades.D => "D",  // warning
                _ => "F" // danger
            };
        }
    }

    private string BackgroundColor
    {
        get
        {
            return Score switch
            {
                >= (int)LetterGrade.Grades.A => "#198754",
                >= (int)LetterGrade.Grades.B => "#0d6efd",
                >= (int)LetterGrade.Grades.C => "#0dcaf0",
                >= (int)LetterGrade.Grades.D => "##ffc107",
                _ => "#dc3545" 
            };
        }

    }
    
    private string ForegroundColor
    {
        get
        {
            return Score switch
            {
                >= (int)LetterGrade.Grades.A => "#000",
                >= (int)LetterGrade.Grades.B => "#000",
                >= (int)LetterGrade.Grades.C => "#000",
                >= (int)LetterGrade.Grades.D => "#000",
                _ => "#000"
            };
        }
    }

}